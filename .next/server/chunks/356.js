"use strict";exports.id=356,exports.ids=[356],exports.modules={9356:(t,a,e)=>{e.d(a,{Jn:()=>i,adminAPI:()=>d,applicationsAPI:()=>c,contentAPI:()=>r});let n="http://localhost:5000",i=t=>t?t.startsWith("http")?t:`${n}${t.startsWith("/")?t:`/${t}`}`:"",s=()=>({"Content-Type":"application/json"}),o=async t=>{if(!t.ok)throw Error((await t.json().catch(()=>({error:"Network error"}))).error||`HTTP ${t.status}`);return t.json()},c={submit:async t=>o(await fetch(`${n}/api/applications`,{method:"POST",body:t})),getAll:async(t={})=>{let a=new URLSearchParams(t).toString();return o(await fetch(`${n}/api/applications${a?`?${a}`:""}`,{headers:{"Content-Type":"application/json"}}))},getStatusByEmail:async t=>o(await fetch(`${n}/api/applications/status/${encodeURIComponent(t)}`)),getStatistics:async()=>o(await fetch(`${n}/api/applications/statistics`,{headers:{"Content-Type":"application/json"}})),updateStatus:async(t,a,e)=>o(await fetch(`${n}/api/applications/${t}`,{method:"PUT",headers:{"Content-Type":"application/json"},body:JSON.stringify({status:a,notes:e})}))},d={login:async(t,a)=>o(await fetch(`${n}/api/admin/login`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({email:t,password:a})})),getProfile:async()=>o(await fetch(`${n}/api/admin/profile`,{headers:s()})),updateProfile:async(t,a)=>o(await fetch(`${n}/api/admin/profile`,{method:"PUT",headers:s(),body:JSON.stringify({name:t,email:a})})),changePassword:async(t,a)=>o(await fetch(`${n}/api/admin/change-password`,{method:"PUT",headers:s(),body:JSON.stringify({currentPassword:t,newPassword:a})}))},r={heroSlides:{getAll:async()=>o(await fetch(`${n}/api/content/hero-slides`)),getAllAdmin:async()=>o(await fetch(`${n}/api/content/admin/hero-slides`,{headers:s()})),create:async t=>o(await fetch(`${n}/api/content/admin/hero-slides`,{method:"POST",headers:{Authorization:"Bearer null"},body:t})),update:async(t,a)=>o(await fetch(`${n}/api/content/admin/hero-slides/${t}`,{method:"PUT",headers:{Authorization:"Bearer null"},body:a})),delete:async t=>o(await fetch(`${n}/api/content/admin/hero-slides/${t}`,{method:"DELETE",headers:s()}))},teachers:{getAll:async()=>o(await fetch(`${n}/api/content/teachers`)),getAllAdmin:async()=>o(await fetch(`${n}/api/content/admin/teachers`,{headers:s()})),create:async t=>o(await fetch(`${n}/api/content/admin/teachers`,{method:"POST",headers:{Authorization:"Bearer null"},body:t})),update:async(t,a)=>o(await fetch(`${n}/api/content/admin/teachers/${t}`,{method:"PUT",headers:{Authorization:"Bearer null"},body:a})),delete:async t=>o(await fetch(`${n}/api/content/admin/teachers/${t}`,{method:"DELETE",headers:s()}))},students:{getAll:async()=>o(await fetch(`${n}/api/content/students`)),getAllAdmin:async()=>o(await fetch(`${n}/api/content/admin/students`,{headers:s()})),create:async t=>o(await fetch(`${n}/api/content/admin/students`,{method:"POST",headers:{Authorization:"Bearer null"},body:t})),update:async(t,a)=>o(await fetch(`${n}/api/content/admin/students/${t}`,{method:"PUT",headers:{Authorization:"Bearer null"},body:a})),delete:async t=>o(await fetch(`${n}/api/content/admin/students/${t}`,{method:"DELETE",headers:s()}))},uploadImage:async t=>{let a=new FormData;return a.append("image",t),o(await fetch(`${n}/api/content/upload`,{method:"POST",headers:{Authorization:"Bearer null"},body:a}))}}}};